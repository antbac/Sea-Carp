@model SeaCarp.Presentation.Models.ViewModels.AdminViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <nav class="nav flex-column nav-pills">
                <a class="nav-link active" href="#dashboard">Dashboard Summary</a>
                <a class="nav-link" href="#products">Manage Products</a>
                <a class="nav-link" href="#orders">Manage Orders</a>
                <a class="nav-link" href="#users">Manage Users</a>
            </nav>
        </div>

        <div class="col-md-9">
            <section id="dashboard">
                <h2>Dashboard Summary</h2>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="card text-center mb-3">
                            <div class="card-body">
                                <h3>@Model.TotalProducts</h3>
                                <p>Products</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="card text-center mb-3">
                            <div class="card-body">
                                <h3>@Model.TotalOrders</h3>
                                <p>Orders</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="card text-center mb-3">
                            <div class="card-body">
                                <h3>@Model.TotalUsers</h3>
                                <p>Users</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <hr />

            <section id="products">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Manage Products</h2>
                </div>
                <table class="table table-striped table-hover mt-3">
                    <thead>
                        <tr>
                            <th>Product ID</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.Products)
                        {
                            <tr>
                                <td>@product.Id</td>
                                <td>@product.ProductName</td>
                                <td>$@product.Price</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-warning edit-product-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editProductModal"
                                            data-id="@product.Id"
                                            data-productname="@product.ProductName"
                                            data-description="@product.Description"
                                            data-price="@product.Price.ToString().Replace(",", ".")"
                                            data-category="@product.Category">
                                        Edit
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form id="edit_product_form">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <input type="hidden" name="Id" id="productId" />

                                    <div class="mb-3">
                                        <label for="productName" class="form-label">Product Name</label>
                                        <input type="text" class="form-control" id="productName" name="ProductName" required />
                                    </div>
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description</label>
                                        <textarea class="form-control" id="description" name="Description" required></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label for="price" class="form-label">Price</label>
                                        <input type="number" step="0.01" class="form-control" id="price" name="Price" required />
                                    </div>
                                    <div class="mb-3">
                                        <label for="category" class="form-label">Category</label>
                                        <input type="text" class="form-control" id="category" name="Category" required />
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </section>

            <hr />

            <section id="orders">
                <h2>Manage Orders</h2>
                <table class="table table-striped table-hover mt-3">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>User</th>
                            <th>Total</th>
                            <th>Status</th>
                            <th>Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td>@order.OrderNumber</td>
                                <td>@order.Buyer</td>
                                <td>$@order.Total</td>
                                <td>@order.Status</td>
                                <td>@order.OrderDate</td>
                                <td>
                                    <a class="btn btn-sm btn-info" href="/@nameof(OrdersController).RemoveControllerSuffix()/@order.OrderNumber">View</a>
                                    @if (order.Status.ToString() == "Pending")
                                    {
                                        <a class="btn btn-sm btn-danger" id="cancel_order_@(order.OrderNumber)">Cancel</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </section>

            <hr />

            <section id="users">
                <h2>Manage Users</h2>
                <table class="table table-striped table-hover mt-3">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>Username</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>@user.Username</td>
                                <td>@user.Email</td>
                                <td>@(user.IsAdmin ? "Admin" : "Customer")</td>
                                <td>
                                    <a class="btn btn-sm btn-warning" id="reset_password_@(user.Id)">Reset password</a>
                                    <a class="btn btn-sm btn-danger" id="delete_user_@(user.Id)">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </section>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.addEventListener('DOMContentLoaded', () => {
            var editProductModal = document.getElementById('editProductModal');
            editProductModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var id = button.getAttribute('data-id');
                var productName = button.getAttribute('data-productname');
                var description = button.getAttribute('data-description');
                var price = button.getAttribute('data-price');
                var category = button.getAttribute('data-category');

                editProductModal.querySelector('#productId').value = id;
                editProductModal.querySelector('#productName').value = productName;
                editProductModal.querySelector('#description').value = description;
                editProductModal.querySelector('#price').value = price;
                editProductModal.querySelector('#category').value = category;
            });

            document.querySelector('#edit_product_form').onsubmit = (e) =>
            {
                e.preventDefault();
                
                var productId = editProductModal.querySelector('#productId').value;
                var productName = editProductModal.querySelector('#productName').value;
                var description = editProductModal.querySelector('#description').value;
                var price = editProductModal.querySelector('#price').value;
                var category = editProductModal.querySelector('#category').value;

                fetch(`/AdminHiddenXYZ/Products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        ProductName: productName,
                        Description: description,
                        Price: price,
                        Category: category,
                    })
                })
                .then(function (response) {
                    return response.json();
                })
                .then(function (data) {
                    if (!data.success) {
                        document.querySelector('#error-box').style.display = 'block';
                        document.querySelector('#error-message').textContent = data.errorMessage;
                        return;
                    }
                    window.location.reload();
                });

                return false;
            };

            const aTags = [...document.querySelectorAll('a')];
            const resetPasswordButtons = aTags.filter(tag => tag.id.startsWith("reset_password_"));
            const deleteUsersButtons = aTags.filter(tag => tag.id.startsWith("delete_user_"));
            const cancelOrdersButtons = aTags.filter(tag => tag.id.startsWith("cancel_order_"));

            resetPasswordButtons.forEach(button => {
                button.onclick = (e) => {
                    fetch(`/AdminHiddenXYZ/Users/${e.target.id.replace("reset_password_","")}/ResetPassword`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (data) {
                        if (data.success) {
                            alert("Reset user password to 'pass'");
                        } else {
                            alert("An error occured:\n" + data.errorMessage);
                        }
                    });
                };
            });

            deleteUsersButtons.forEach(button => {
                button.onclick = (e) => {
                    fetch(`/AdminHiddenXYZ/Users/${e.target.id.replace("delete_user_", "")}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (data) {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert("An error occured:\n" + data.errorMessage);
                        }
                    });
                };
            });

            cancelOrdersButtons.forEach(button => {
                button.onclick = (e) => {
                    fetch(`/AdminHiddenXYZ/Orders/${e.target.id.replace("cancel_order_", "")}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (data) {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert("An error occured:\n" + data.errorMessage);
                        }
                    });
                };
            });
        });
    </script>
}
